from clock import Clock

cl = Clock()

print('=' * 100)
print(cl.scramble)
print('=' * 100)
print(cl.scramble_state_front)
print('-' * 100)
print(cl.scramble_state_back)
print('=' * 100)
m1, m2, m3, m4 = cl.get_7_simul_flip_bpaul_1_x2(cl.scramble_state)
print('[7-Simul Flip] bpaul’s Order 1 (x2 encoding)        : {}, {}, {}, {}'.format(m1, m2, m3, m4))
m1, m2, m3, m4 = cl.get_7_simul_flip_bpaul_2_x2(cl.scramble_state)
print('[7-Simul Flip] bpaul’s Order 1 (x2 encoding)        : {}, {}, {}, {}'.format(m1, m2, m3, m4))
print('-' * 100)
m1, m2, m3, m4, m5 = cl.get_7_simul_flip_tommy_1_x2(cl.scramble_state)
print('[7-Simul Flip] Tommy Cherry’s Order 1 (x2 encoding) : {}, {}, {}, {}, {}'.format(m1, m2, m3, m4, m5))
m1, m2, m3, m4, m5 = cl.get_7_simul_flip_tommy_2_x2(cl.scramble_state)
print('[7-Simul Flip] Tommy Cherry’s Order 2 (x2 encoding) : {}, {}, {}, {}, {}'.format(m1, m2, m3, m4, m5))
print('-' * 100)
m1, m2, m3, m4, m5 = cl.get_7_simul_no_flip_bpaul_x2(cl.scramble_state)
print('[7-Simul No-Flip] bpaul’s Order (x2 encoding)       : {}, {}, {}, {}, {}'.format(m1, m2, m3, m4, m5))
m1, m2, m3, m4, m5 = cl.get_7_simul_no_flip_bpaul_y2(cl.scramble_state)
print('[7-Simul No-Flip] bpaul’s Order (y2 encoding)       : {}, {}, {}, {}, {}'.format(m1, m2, m3, m4, m5))
print('-' * 100)
m1, m2, m3, m4, m5 = cl.get_7_simul_no_flip_tommy_x2(cl.scramble_state)
print('[7-Simul No-Flip] Tommy Cherry’s Order (x2 encoding): {}, {}, {}, {}, {}'.format(m1, m2, m3, m4, m5))
m1, m2, m3, m4, m5 = cl.get_7_simul_no_flip_tommy_y2(cl.scramble_state)
print('[7-Simul No-Flip] Tommy Cherry’s Order (y2 encoding): {}, {}, {}, {}, {}'.format(m1, m2, m3, m4, m5))
print('=' * 100)
